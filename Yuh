local UIS = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Tool name and creation path
local TOOL_NAME = "AimlockTool"

-- Variables for the locked target and tool management
local lockedTarget = nil
local aimlockTool = nil
local aimlockEnabled = false

-- Function to create a new aimlock tool
function createAimlockTool()
    local tool = Instance.new("Tool")
    tool.Name = TOOL_NAME
    tool.RequiresHandle = true
    tool.CanBeDropped = false
    
    local handle = Instance.new("Part")
    handle.Name = "Handle"
    handle.Size = Vector3.new(1, 1, 1) -- Adjust size as needed
    handle.Anchored = false
    handle.CanCollide = false
    handle.Parent = tool
    
    tool.Parent = Players.LocalPlayer.Backpack
    return tool
end

-- Function to get the player at the mouse position
function getPlayerAtMouse()
    local mouse = Players.LocalPlayer:GetMouse()
    local target = mouse.Target
    if target and target.Parent and target.Parent:FindFirstChild("Humanoid") then
        return Players:GetPlayerFromCharacter(target.Parent)
    end
    return nil
end

-- Function to lock onto a player
function lockOnToPlayer(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        lockedTarget = player
    end
end

-- Function to clear the locked target
function clearLock()
    lockedTarget = nil
end

-- Handle tool activation and deactivation
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        if aimlockTool then
            if aimlockEnabled then
                local player = getPlayerAtMouse()
                if player then
                    lockOnToPlayer(player)
                end
            end
        end
    end
end)

-- Handle tool visibility
UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        if aimlockTool then
            if lockedTarget then
                clearLock()
            end
        end
    end
end)

-- Function to adjust aiming direction with prediction
function aimlock()
    if lockedTarget and lockedTarget.Character and lockedTarget.Character:FindFirstChild("HumanoidRootPart") then
        local cam = workspace.CurrentCamera
        local targetPos = lockedTarget.Character.HumanoidRootPart.Position
        local predictedPos = targetPos -- Add prediction logic here if needed
        cam.CFrame = CFrame.new(cam.CFrame.Position, predictedPos)
    end
end

-- Initialize the tool and aimlock
aimlockTool = Players.LocalPlayer.Backpack:FindFirstChild(TOOL_NAME)
if not aimlockTool then
    aimlockTool = createAimlockTool()
end

-- Continuous aimlock
RunService.RenderStepped:Connect(function()
    aimlock()
end)
