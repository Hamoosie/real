-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

-- Configuration
local HITBOX_SCALE = 10 -- Scale factor to increase the hitbox size
local HITBOX_COLOR = Color3.fromRGB(255, 0, 0) -- Red color for the hitbox
local HITBOX_TRANSPARENCY = 0.5 -- Transparency level of the hitbox

-- Function to create a visual hitbox around a player
local function createHitbox(player)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        return
    end

    -- Remove existing hitbox if it exists
    local existingHitbox = character:FindFirstChild("Hitbox")
    if existingHitbox then
        existingHitbox:Destroy()
    end

    -- Create a new hitbox
    local hitbox = Instance.new("Part")
    hitbox.Name = "Hitbox"
    hitbox.Anchored = true
    hitbox.CanCollide = false
    hitbox.BrickColor = BrickColor.new(HITBOX_COLOR)
    hitbox.Transparency = HITBOX_TRANSPARENCY
    hitbox.Size = character.HumanoidRootPart.Size * HITBOX_SCALE
    hitbox.CFrame = character.HumanoidRootPart.CFrame
    hitbox.Parent = character

    -- Update hitbox size and position continuously
    local function updateHitbox()
        if character and character:FindFirstChild("HumanoidRootPart") then
            hitbox.Size = character.HumanoidRootPart.Size * HITBOX_SCALE
            hitbox.CFrame = character.HumanoidRootPart.CFrame
        end
    end

    -- Connect to RenderStepped to keep hitbox updated
    game:GetService("RunService").RenderStepped:Connect(updateHitbox)
end

-- Create hitboxes for all players already in the game
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= Players.LocalPlayer then
        createHitbox(player)
    end
end

-- Create hitboxes for players who join the game
Players.PlayerAdded:Connect(function(player)
    if player ~= Players.LocalPlayer then
        player.CharacterAdded:Connect(function()
            createHitbox(player)
        end)
    end
end)
